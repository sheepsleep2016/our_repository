# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-05-09 06:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_date', models.DateTimeField(verbose_name='收藏时间')),
            ],
            options={
                'db_table': 'collection',
                'verbose_name_plural': '收藏夹',
                'verbose_name': '收藏夹',
            },
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_name', models.CharField(db_index=True, max_length=32, verbose_name='商品名')),
                ('commodity_discrib', models.TextField(max_length=500, verbose_name='商品描述')),
                ('commodity_position', models.CharField(max_length=128, verbose_name='地理位置')),
                ('commodity_price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='商品价格')),
                ('commodity_date', models.DateTimeField(verbose_name='上架时间')),
                ('commodity_type', models.CharField(max_length=32, verbose_name='商品类型')),
                ('commodity_count', models.IntegerField(verbose_name='商品数量')),
            ],
            options={
                'db_table': 'commodity',
                'verbose_name_plural': '商品',
                'verbose_name': '商品',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_count', models.IntegerField(verbose_name='订单商品数量')),
                ('order_date', models.DateTimeField(verbose_name='订单时间')),
                ('order_position', models.CharField(max_length=32, verbose_name='订单目的地')),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Commodity')),
            ],
            options={
                'db_table': 'order',
                'verbose_name_plural': '订单',
                'verbose_name': '订单',
            },
        ),
        migrations.CreateModel(
            name='Order_feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='订单反馈的标题')),
                ('content', models.TextField(verbose_name='订单反馈内容')),
                ('feedback_date', models.DateTimeField(verbose_name='订单反馈日期')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='index.Order')),
            ],
            options={
                'db_table': 'order_feedback',
                'verbose_name_plural': '订单反馈',
                'verbose_name': '订单反馈',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='static/upload/picture', verbose_name='商品照片')),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Commodity')),
            ],
            options={
                'db_table': 'photo',
                'verbose_name_plural': '商品照片',
                'verbose_name': '商品照片',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='用户名')),
                ('user_email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='邮箱')),
                ('user_pwd', models.CharField(max_length=32, verbose_name='密码')),
                ('user_idcard_num', models.CharField(max_length=32, unique=True, verbose_name='身份证号')),
                ('user_avatar', models.ImageField(null=True, upload_to='static/image/avatar', verbose_name='头像')),
                ('isActive', models.BooleanField(default=False, verbose_name='激活')),
            ],
            options={
                'db_table': 'users',
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
        ),
        migrations.CreateModel(
            name='Web_feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem', models.TextField(verbose_name='反馈的问题')),
                ('feedback_date', models.DateTimeField(verbose_name='反馈日期')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Users')),
            ],
            options={
                'db_table': 'web_feedback',
                'verbose_name_plural': '网站反馈',
                'verbose_name': '网站反馈',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Users'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Users'),
        ),
        migrations.AddField(
            model_name='collection',
            name='commodities',
            field=models.ManyToManyField(to='index.Commodity'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='index.Users'),
        ),
    ]
